name: Install Node Agent (Batched for Large Scale)

on:
  workflow_dispatch:
    inputs:
      batch_size:
        description: 'Number of hosts per batch'
        required: false
        default: '256'
        type: string

jobs:
  prepare:
    runs-on: self-hosted
    outputs:
      batches: ${{ steps.create-batches.outputs.batches }}
      total_hosts: ${{ steps.create-batches.outputs.total_hosts }}
      total_batches: ${{ steps.create-batches.outputs.total_batches }}
    steps:
      - id: create-batches
        run: |
          # Parse hosts and remove empty lines
          HOSTS=$(echo "${{ vars.DEPLOYMENT_HOSTS }}" | tr -d '\r' | grep -v '^$')
          
          # Count total hosts
          TOTAL=$(echo "$HOSTS" | wc -l | xargs)
          echo "total_hosts=$TOTAL" >> $GITHUB_OUTPUT
          
          # Batch size from input or default
          BATCH_SIZE=${{ github.event.inputs.batch_size || '256' }}
          
          # Calculate number of batches needed
          TOTAL_BATCHES=$(( (TOTAL + BATCH_SIZE - 1) / BATCH_SIZE ))
          echo "total_batches=$TOTAL_BATCHES" >> $GITHUB_OUTPUT
          
          # Create batches as JSON array
          BATCHES=$(echo "$HOSTS" | awk -v batch_size=$BATCH_SIZE '
            BEGIN { batch=0; hosts="" }
            {
              if (NR % batch_size == 1) {
                if (hosts != "") {
                  print hosts
                }
                hosts = "\"" $0 "\""
                batch++
              } else {
                hosts = hosts ",\"" $0 "\""
              }
            }
            END { if (hosts != "") print hosts }
          ' | jq -s -c '[.[] | split(",") | map(fromjson)]')
          
          echo "batches=$BATCHES" >> $GITHUB_OUTPUT
          
          echo "ðŸ“Š Installing Node agent on $TOTAL hosts across $TOTAL_BATCHES batches"

  install-batch:
    needs: prepare
    runs-on: self-hosted
    strategy:
      max-parallel: 1
      matrix:
        batch: ${{ fromJson(needs.prepare.outputs.batches) }}
    
    steps:
      - name: Install node agent on batch hosts
        run: |
          BATCH_HOSTS='${{ toJson(matrix.batch) }}'
          BATCH_SIZE=$(echo "$BATCH_HOSTS" | jq '. | length')
          echo "ðŸš€ Installing Node agent on batch of $BATCH_SIZE hosts"
          
          # Process each host in the batch in parallel
          echo "$BATCH_HOSTS" | jq -r '.[]' | while read HOST; do
            (
              echo "ðŸ“¡ Installing Node agent on $HOST"
              
              # Setup SSH
              mkdir -p ~/.ssh
              echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa_$HOST
              chmod 600 ~/.ssh/id_rsa_$HOST
              
              # Install agent
              ssh -i ~/.ssh/id_rsa_$HOST \
                  -o StrictHostKeyChecking=no \
                  -o UserKnownHostsFile=/dev/null \
                  ubuntu@$HOST << 'EOF'
                cd /opt/appdynamics/appdsmartagent
                sudo ./smartagentctl install node
EOF
              
              # Cleanup
              rm -f ~/.ssh/id_rsa_$HOST
              
              echo "âœ… Completed Node agent installation on $HOST"
            ) &
          done
          
          # Wait for all parallel installations to complete
          wait
          echo "âœ… Batch installation complete"

  summary:
    needs: [prepare, install-batch]
    runs-on: self-hosted
    if: always()
    steps:
      - name: Installation Summary
        run: |
          echo "ðŸ“Š Node Agent Installation Summary"
          echo "=================================="
          echo "Total hosts: ${{ needs.prepare.outputs.total_hosts }}"
          echo "Total batches: ${{ needs.prepare.outputs.total_batches }}"
          echo "Status: ${{ needs.install-batch.result }}"
